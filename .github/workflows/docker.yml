name: DOCKER

on:
  push:
    # Trigger this workflow on changes to `main`
    branches: [ main ]
    # Trigger this workflow if a semver tag is pushed
    tags: [ 'v*.*.*' ]

env:
  REPOSITORY: tactical_charging_module/sroc-tcm-admin

jobs:
  build:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones block `git describe --always --tags` from working later in 'Set all tags'

      # Configure our AWS credentials and region environment variables for use in other GitHub Actions
      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_ENV_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ENV_ACCOUNT }}:role/${{ secrets.AWS_ENV_ROLE }}

      # Login to AWS ECR private. It will use the credentials we configured in the previous step
      # https://github.com/aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate raw tag
        id: raw-tag
        run:
          echo "raw_tag=$(git describe --always --tags)" >> $GITHUB_OUTPUT

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}
          tags: |
            type=semver,priority=900,pattern={{raw}}
            type=raw,priority=800,value=${{ steps.raw-tag.outputs.raw_tag }}
          labels: |
            org.opencontainers.image.licenses=OGL-UK-3.0

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: production
          build-args: |
            GIT_COMMIT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          push: true
          labels: ${{ steps.meta_github.outputs.labels }}
          tags: ${{ env.ALL_TAGS }}
